/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { CoffeeNFT, CoffeeNFTInterface } from "../../contracts/CoffeeNFT";

const _abi = [
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "coffeeChatAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_coffeeChatAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user1",
        type: "address",
      },
      {
        internalType: "address",
        name: "user2",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b506080516120ea61004c600039600081816108c901528181610912015281816109d201528181610a120152610aa501526120ea6000f3fe6080604052600436106101815760003560e01c806370a08231116100d1578063b88d4fde1161008a578063d547cfb711610064578063d547cfb714610453578063e985e9c514610468578063ee1fe2ad14610488578063f2fde38b146104a857600080fd5b8063b88d4fde146103f3578063c4d66de814610413578063c87b56dd1461043357600080fd5b806370a082311461034b578063715018a61461036b5780638da5cb5b1461038057806395d89b411461039e57806399bcaf46146103b3578063a22cb465146103d357600080fd5b806332cb6b0c1161013e5780634f1ef286116101185780634f1ef286146102e357806352d1902d146102f657806355f804b31461030b5780636352211e1461032b57600080fd5b806332cb6b0c1461027a5780633659cfe6146102a357806342842e0e146102c357600080fd5b806301ffc9a71461018657806306fdde03146101bb578063081812fc146101dd578063095ea7b31461021557806318160ddd1461023757806323b872dd1461025a575b600080fd5b34801561019257600080fd5b506101a66101a1366004611abf565b6104c8565b60405190151581526020015b60405180910390f35b3480156101c757600080fd5b506101d061051a565b6040516101b29190611b34565b3480156101e957600080fd5b506101fd6101f8366004611b47565b6105b5565b6040516001600160a01b0390911681526020016101b2565b34801561022157600080fd5b50610235610230366004611b7c565b610602565b005b34801561024357600080fd5b5061024c6106b0565b6040519081526020016101b2565b34801561026657600080fd5b50610235610275366004611ba6565b6106cf565b34801561028657600080fd5b5061029061271081565b60405161ffff90911681526020016101b2565b3480156102af57600080fd5b506102356102be366004611be2565b6108be565b3480156102cf57600080fd5b506102356102de366004611ba6565b6109a7565b6102356102f1366004611ca9565b6109c7565b34801561030257600080fd5b5061024c610a98565b34801561031757600080fd5b50610235610326366004611cf7565b610b4b565b34801561033757600080fd5b506101fd610346366004611b47565b610b66565b34801561035757600080fd5b5061024c610366366004611be2565b610b71565b34801561037757600080fd5b50610235610bda565b34801561038c57600080fd5b506097546001600160a01b03166101fd565b3480156103aa57600080fd5b506101d0610bee565b3480156103bf57600080fd5b5060c9546101fd906001600160a01b031681565b3480156103df57600080fd5b506102356103ee366004611d40565b610c06565b3480156103ff57600080fd5b5061023561040e366004611d7c565b610cad565b34801561041f57600080fd5b5061023561042e366004611be2565b610cf7565b34801561043f57600080fd5b506101d061044e366004611b47565b610e72565b34801561045f57600080fd5b506101d0610f04565b34801561047457600080fd5b506101a6610483366004611de4565b610f92565b34801561049457600080fd5b506102356104a3366004611de4565b610fcf565b3480156104b457600080fd5b506102356104c3366004611be2565b611074565b60006301ffc9a760e01b6001600160e01b0319831614806104f957506380ac58cd60e01b6001600160e01b03198316145b806105145750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606105246110ea565b600201805461053290611e17565b80601f016020809104026020016040519081016040528092919081815260200182805461055e90611e17565b80156105ab5780601f10610580576101008083540402835291602001916105ab565b820191906000526020600020905b81548152906001019060200180831161058e57829003601f168201915b5050505050905090565b60006105c08261110e565b6105dd576040516333d1c03960e21b815260040160405180910390fd5b6105e56110ea565b60009283526006016020525060409020546001600160a01b031690565b600061060d82610b66565b9050336001600160a01b03821614610646576106298133610f92565b610646576040516367d9dca160e11b815260040160405180910390fd5b8261064f6110ea565b6000848152600691909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551849286811692908516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a4505050565b6000806106bb6110ea565b600101546106c76110ea565b540303919050565b60006106da8261114a565b9050836001600160a01b0316816001600160a01b03161461070d5760405162a1148160e81b815260040160405180910390fd5b600080610719846111d1565b9150915061073e81876107293390565b6001600160a01b039081169116811491141790565b6107695761074c8633610f92565b61076957604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03851661079057604051633a954ecd60e21b815260040160405180910390fd5b801561079b57600082555b6107a36110ea565b6001600160a01b03871660009081526005919091016020526040902080546000190190556107cf6110ea565b6001600160a01b03861660008181526005929092016020526040909120805460010190554260a01b17600160e11b176108066110ea565b60008681526004919091016020526040902055600160e11b831661087557600184016108306110ea565b600082815260049190910160205260409020546108735761084f6110ea565b548114610873578361085f6110ea565b600083815260049190910160205260409020555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156109105760405162461bcd60e51b815260040161090790611e52565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661095960008051602061206e833981519152546001600160a01b031690565b6001600160a01b03161461097f5760405162461bcd60e51b815260040161090790611e9e565b610988816111f9565b604080516000808252602082019092526109a491839190611201565b50565b6109c283838360405180602001604052806000815250610cad565b505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610a105760405162461bcd60e51b815260040161090790611e52565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a5960008051602061206e833981519152546001600160a01b031690565b6001600160a01b031614610a7f5760405162461bcd60e51b815260040161090790611e9e565b610a88826111f9565b610a9482826001611201565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b385760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610907565b5060008051602061206e83398151915290565b610b5361136c565b8051610a949060ca906020840190611a10565b60006105148261114a565b60006001600160a01b038216610b9a576040516323d3ad8160e21b815260040160405180910390fd5b67ffffffffffffffff610bab6110ea565b6005016000846001600160a01b03166001600160a01b0316815260200190815260200160002054169050919050565b610be261136c565b610bec60006113c6565b565b6060610bf86110ea565b600301805461053290611e17565b6001600160a01b038216331415610c305760405163b06307db60e01b815260040160405180910390fd5b80610c396110ea565b336000818152600792909201602090815260408084206001600160a01b03881680865290835293819020805460ff19169515159590951790945592518415158152919290917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610cb88484846106cf565b6001600160a01b0383163b15610cf157610cd484848484611418565b610cf1576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b600054610100900460ff1615808015610d175750600054600160ff909116105b80610d315750303b158015610d31575060005460ff166001145b610d945760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610907565b6000805460ff191660011790558015610db7576000805461ff0019166101001790555b610dfe6040518060400160405280600981526020016810dbd999995953919560ba1b8152506040518060400160405280600481526020016310d3919560e21b815250611501565b610e06611551565b610e0e611580565b60c980546001600160a01b0319166001600160a01b0384161790558015610a94576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6060610e7d8261110e565b610e9a57604051630a14c4b560e41b815260040160405180910390fd5b6000610eb160408051602081019091526000815290565b9050805160001415610ed25760405180602001604052806000815250610efd565b80610edc846115a7565b604051602001610eed929190611eea565b6040516020818303038152906040525b9392505050565b60ca8054610f1190611e17565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3d90611e17565b8015610f8a5780601f10610f5f57610100808354040283529160200191610f8a565b820191906000526020600020905b815481529060010190602001808311610f6d57829003601f168201915b505050505081565b6000610f9c6110ea565b6001600160a01b039384166000908152600791909101602090815260408083209490951682529290925250205460ff1690565b60c9546001600160a01b0316336001600160a01b03161461103d5760405162461bcd60e51b815260206004820152602260248201527f6f6e6c792063616c6c656420627920436f666665654368617420636f6e74726160448201526118dd60f21b6064820152608401610907565b6127106110486106b0565b611053906002611f19565b111561105e57600080fd5b6110698260016115e9565b610a948160016115e9565b61107c61136c565b6001600160a01b0381166110e15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610907565b6109a4816113c6565b7f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4090565b60006111186110ea565b54821080156105145750600160e01b61112f6110ea565b60008481526004919091016020526040902054161592915050565b6000816111556110ea565b548110156111b85760006111676110ea565b600083815260049190910160205260409020549050600160e01b81166111b6575b80610efd576111956110ea565b60001990920160008181526004939093016020526040909220549050611188565b505b604051636f96cda160e11b815260040160405180910390fd5b60008060006111de6110ea565b60009485526006016020525050604090912080549092909150565b6109a461136c565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611234576109c28361171d565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561128e575060408051601f3d908101601f1916820190925261128b91810190611f3f565b60015b6112f15760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610907565b60008051602061206e83398151915281146113605760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610907565b506109c28383836117b9565b6097546001600160a01b03163314610bec5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610907565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a029061144d903390899088908890600401611f58565b6020604051808303816000875af1925050508015611488575060408051601f3d908101601f1916820190925261148591810190611f95565b60015b6114e3573d8080156114b6576040519150601f19603f3d011682016040523d82523d6000602084013e6114bb565b606091505b5080516114db576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b7fee151c8401928dc223602bb187aff91b9a56c7cae5476ef1b3287b085a16c85f54610100900460ff166115475760405162461bcd60e51b815260040161090790611fb2565b610a9482826117de565b600054610100900460ff166115785760405162461bcd60e51b815260040161090790612006565b610bec611873565b600054610100900460ff16610bec5760405162461bcd60e51b815260040161090790612006565b604080516080019081905280825b600183039250600a81066030018353600a9004806115d2576115d7565b6115b5565b50819003601f19909101908152919050565b60006115f36110ea565b549050816116145760405163b562e8dd60e01b815260040160405180910390fd5b6801000000000000000182026116286110ea565b6001600160a01b038516600081815260059290920160205260409091208054929092019091554260a01b6001841460e11b17176116636110ea565b600083815260049190910160205260408120919091556001600160a01b0384169083830190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b8181146116ed57808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a46001016116b5565b508161170b57604051622e076360e81b815260040160405180910390fd5b806117146110ea565b55506109c29050565b6001600160a01b0381163b61178a5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610907565b60008051602061206e83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6117c2836118a3565b6000825111806117cf5750805b156109c257610cf183836118e3565b7fee151c8401928dc223602bb187aff91b9a56c7cae5476ef1b3287b085a16c85f54610100900460ff166118245760405162461bcd60e51b815260040161090790611fb2565b8161182d6110ea565b6002019080519060200190611843929190611a10565b508061184d6110ea565b6003019080519060200190611863929190611a10565b50600061186e6110ea565b555050565b600054610100900460ff1661189a5760405162461bcd60e51b815260040161090790612006565b610bec336113c6565b6118ac8161171d565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b61194b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610907565b600080846001600160a01b0316846040516119669190612051565b600060405180830381855af49150503d80600081146119a1576040519150601f19603f3d011682016040523d82523d6000602084013e6119a6565b606091505b50915091506119ce828260405180606001604052806027815260200161208e602791396119d7565b95945050505050565b606083156119e6575081610efd565b8251156119f65782518084602001fd5b8160405162461bcd60e51b81526004016109079190611b34565b828054611a1c90611e17565b90600052602060002090601f016020900481019282611a3e5760008555611a84565b82601f10611a5757805160ff1916838001178555611a84565b82800160010185558215611a84579182015b82811115611a84578251825591602001919060010190611a69565b50611a90929150611a94565b5090565b5b80821115611a905760008155600101611a95565b6001600160e01b0319811681146109a457600080fd5b600060208284031215611ad157600080fd5b8135610efd81611aa9565b60005b83811015611af7578181015183820152602001611adf565b83811115610cf15750506000910152565b60008151808452611b20816020860160208601611adc565b601f01601f19169290920160200192915050565b602081526000610efd6020830184611b08565b600060208284031215611b5957600080fd5b5035919050565b80356001600160a01b0381168114611b7757600080fd5b919050565b60008060408385031215611b8f57600080fd5b611b9883611b60565b946020939093013593505050565b600080600060608486031215611bbb57600080fd5b611bc484611b60565b9250611bd260208501611b60565b9150604084013590509250925092565b600060208284031215611bf457600080fd5b610efd82611b60565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611c2e57611c2e611bfd565b604051601f8501601f19908116603f01168101908282118183101715611c5657611c56611bfd565b81604052809350858152868686011115611c6f57600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611c9a57600080fd5b610efd83833560208501611c13565b60008060408385031215611cbc57600080fd5b611cc583611b60565b9150602083013567ffffffffffffffff811115611ce157600080fd5b611ced85828601611c89565b9150509250929050565b600060208284031215611d0957600080fd5b813567ffffffffffffffff811115611d2057600080fd5b8201601f81018413611d3157600080fd5b6114f984823560208401611c13565b60008060408385031215611d5357600080fd5b611d5c83611b60565b915060208301358015158114611d7157600080fd5b809150509250929050565b60008060008060808587031215611d9257600080fd5b611d9b85611b60565b9350611da960208601611b60565b925060408501359150606085013567ffffffffffffffff811115611dcc57600080fd5b611dd887828801611c89565b91505092959194509250565b60008060408385031215611df757600080fd5b611e0083611b60565b9150611e0e60208401611b60565b90509250929050565b600181811c90821680611e2b57607f821691505b60208210811415611e4c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60008351611efc818460208801611adc565b835190830190611f10818360208801611adc565b01949350505050565b60008219821115611f3a57634e487b7160e01b600052601160045260246000fd5b500190565b600060208284031215611f5157600080fd5b5051919050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611f8b90830184611b08565b9695505050505050565b600060208284031215611fa757600080fd5b8151610efd81611aa9565b60208082526034908201527f455243373231415f5f496e697469616c697a61626c653a20636f6e7472616374604082015273206973206e6f7420696e697469616c697a696e6760601b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008251612063818460208701611adc565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220721ae967b2cf8d07fd1198a44c9f99a316f78a70e6a0784e9bfc1bf3f642cd4264736f6c634300080c0033";

type CoffeeNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CoffeeNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CoffeeNFT__factory extends ContractFactory {
  constructor(...args: CoffeeNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CoffeeNFT> {
    return super.deploy(overrides || {}) as Promise<CoffeeNFT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CoffeeNFT {
    return super.attach(address) as CoffeeNFT;
  }
  override connect(signer: Signer): CoffeeNFT__factory {
    return super.connect(signer) as CoffeeNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoffeeNFTInterface {
    return new utils.Interface(_abi) as CoffeeNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CoffeeNFT {
    return new Contract(address, _abi, signerOrProvider) as CoffeeNFT;
  }
}
